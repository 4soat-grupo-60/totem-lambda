AWSTemplateFormatVersion: 2010-09-09
Description: >-
  totem-lambda

Transform:
  - AWS::Serverless-2016-10-31

Resources:
  LoginFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/login.loginHandler
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Description: login handler to Cognito
      Environment:
        Variables:
          COGNITO_REGION: "us-east-1"
          COGNITO_CLIENT_ID: !Ref CognitoUserPoolClient
          COGNITO_USER_POOL_ID: !Ref CognitoUserPool
      Events:
        Api:
          Type: Api
          Properties:
            Path: /login
            Method: POST

  RegisterFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/register.registerHandler
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Description: Register handler function to Cognito
      Environment:
        Variables:
          COGNITO_REGION: "us-east-1"
          COGNITO_CLIENT_ID: !Ref CognitoUserPoolClient
          COGNITO_USER_POOL_ID: !Ref CognitoUserPool
      Policies:
        ManagedPolicyArns:
          - !Ref CognitoUserPoolClientAdminPolicy
      Events:
        Api:
          Type: Api
          Properties:
            Path: /register
            Method: POST

  CognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: sam-tech-challenge
      AutoVerifiedAttributes:
        - "email"
      MfaConfiguration: "OFF"
      UsernameConfiguration:
        CaseSensitive: false
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireLowercase: false
          RequireNumbers: false
          RequireSymbols: false
          RequireUppercase: false
          TemporaryPasswordValidityDays: 365
      Schema:
        - Name: email
          AttributeDataType: String
          Mutable: true
          Required: true
        - Name: name
          AttributeDataType: String
          Mutable: true
          Required: true
        - Name: CPF
          AttributeDataType: String
          Mutable: true
          Required: false
          StringAttributeConstraints:
            MinLength: "11"
            MaxLength: "11"

  CognitoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: sam-tech-challenge-client
      UserPoolId: !Ref CognitoUserPool
      ExplicitAuthFlows:
        - ALLOW_USER_PASSWORD_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
        - ALLOW_ADMIN_USER_PASSWORD_AUTH
        - ALLOW_CUSTOM_AUTH

  CognitoUserPoolClientAdminPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - "cognito-idp:AdminConfirmSignUp"
            Resource: !Sub "arn:aws:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/${CognitoUserPool}"

Outputs:
  WebEndpoint:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
  LoginFunction:
    Description: "Login Function ARN"
    Value: !GetAtt LoginFunction.Arn
  LoginFunctionIamRole:
    Description: "Implicit IAM Role created for Login function"
    Value: !GetAtt LoginFunctionRole.Arn
  RegisterFunction:
    Description: "Register Function ARN"
    Value: !GetAtt RegisterFunction.Arn
  RegisterFunctionIamRole:
    Description: "Implicit IAM Role created for Register function"
    Value: !GetAtt RegisterFunctionRole.Arn
  CognitoUserPoolId:
    Description: "Cognito User Pool Id"
    Value: !Ref CognitoUserPool
  CognitoUserPoolClientId:
    Description: "Cognito User Pool Client Id"
    Value: !Ref CognitoUserPoolClient
